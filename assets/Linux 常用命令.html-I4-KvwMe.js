import{_ as a,o as n,c as s,a as e}from"./app-fr3Buw_y.js";const t={},r=e(`<table><thead><tr><th>命令</th><th>对应英文</th><th>作用｜</th></tr></thead><tbody><tr><td>ls</td><td>list</td><td>查看当前目录下的内容</td></tr><tr><td>pwd</td><td>print work directory</td><td>查看当前所在目录</td></tr><tr><td>cd [目录名]</td><td>change directory</td><td>切换目录</td></tr><tr><td>touch [文件名]</td><td>touch</td><td>如果文件不存在，新建文件</td></tr><tr><td>mkdir [目录名]</td><td>make directory</td><td>创建目录</td></tr><tr><td>rm [文件名]</td><td>remove</td><td>删除指定文件</td></tr></tbody></table><p>在执行Linux命令时，如果有乱码，命令行输入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>echo <span class="token string">&#39;LANG=&quot;en_US.UTF-8&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> <span class="token operator">/</span>etc<span class="token operator">/</span>profile
source <span class="token operator">/</span>etc<span class="token operator">/</span>profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>实用小技巧</p><p>tab 自动补全 两次tab 给出提示 上下键 使用过的命令 使用clear 或 Ctrl + l 清屏</p><p>command [-option] [parameter]</p><p>command 命令名 [-option] 选项 [parameter] 参数（0 到多）</p><p>eg:</p><p>cd /usr/name ls -l rm -f 1.txt 2.txt</p><h2 id="ls" tabindex="-1"><a class="header-anchor" href="#ls" aria-hidden="true">#</a> ls</h2><p>ls -a 展示所有的文件及目录 ls -l 除文件名称外，同时将文件形态（d表示目录，-表示文件）权限，拥有者，文件大小等详细列出(缩写 ll)</p><p>ls -al</p><h2 id="cd" tabindex="-1"><a class="header-anchor" href="#cd" aria-hidden="true">#</a> cd</h2><p>cd .. 上级目录 cd ~ 切换用户的home目录 cd /usr/local 切换到/usr/local 目录 cd / 到根目录下</p><h2 id="cat" tabindex="-1"><a class="header-anchor" href="#cat" aria-hidden="true">#</a> cat</h2><p>查看文件</p><p>cat /etc/profile cat -n /etc/profile（加上行数）</p><h3 id="more" tabindex="-1"><a class="header-anchor" href="#more" aria-hidden="true">#</a> more</h3><p>more fileName</p><p>回车键 向下滚动一行 空格键 向下滚动一屏 b 返回上一屏 q 或 Ctrl+C 退出more</p><h3 id="tail-查看文件末尾的内容" tabindex="-1"><a class="header-anchor" href="#tail-查看文件末尾的内容" aria-hidden="true">#</a> tail 查看文件末尾的内容</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>tail <span class="token operator">/</span>etc<span class="token operator">/</span>profile   显示profile文件末尾<span class="token number">10</span>行内容

tail <span class="token operator">-</span><span class="token number">20</span> <span class="token operator">/</span>etc<span class="token operator">/</span>profile  显示profile文件末尾<span class="token number">20</span>行内容

tail <span class="token operator">-</span>f <span class="token operator">/</span>etc<span class="token operator">/</span>error<span class="token punctuation">.</span>log   动态读取末尾内容并展示

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mkdir" tabindex="-1"><a class="header-anchor" href="#mkdir" aria-hidden="true">#</a> mkdir</h2><p>mkdir -p 1/2/3 创建多层目录</p><h4 id="rmdir" tabindex="-1"><a class="header-anchor" href="#rmdir" aria-hidden="true">#</a> rmdir</h4><p>rmdir 文件夹名 删除空文件夹</p><p>rmdir -p name/1</p><h2 id="rm" tabindex="-1"><a class="header-anchor" href="#rm" aria-hidden="true">#</a> rm</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rm <span class="token operator">-</span>f 文件
rm <span class="token operator">-</span>rf 文件夹<span class="token operator">/</span>文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cp" tabindex="-1"><a class="header-anchor" href="#cp" aria-hidden="true">#</a> cp</h2><p>用于 复制 文件 或目录</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cp <span class="token punctuation">[</span><span class="token operator">-</span>r<span class="token punctuation">]</span> source dest

<span class="token operator">-</span>r 加上后会复制该目录下的所有子目录和文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
cp hello<span class="token punctuation">.</span>txt folder  将hello<span class="token punctuation">.</span>txt 复制到folder目录中
cp hello<span class="token punctuation">.</span>txt <span class="token punctuation">.</span><span class="token operator">/</span>hi<span class="token punctuation">.</span>txt  将hello<span class="token punctuation">.</span>txt 复制到当前目录，并改名为hi<span class="token punctuation">.</span>txt

cp <span class="token operator">-</span>r folderA<span class="token operator">/</span> <span class="token punctuation">.</span><span class="token operator">/</span>folderB<span class="token operator">/</span> 将folderA目录和目录下的所有文件复制到folderB目录下

cp <span class="token operator">-</span>r folderB<span class="token comment">/* ./folderB/ 将folderA目录下的所有文件复制到folderB目录下
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mv" tabindex="-1"><a class="header-anchor" href="#mv" aria-hidden="true">#</a> mv</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>mv hello<span class="token punctuation">.</span>txt hi<span class="token punctuation">.</span>txt   <span class="token comment">//将hello.txt 改名为hi.txt</span>

mv hi<span class="token punctuation">.</span>txt src<span class="token operator">/</span>  <span class="token comment">// 将hi.txt 移动到src目录</span>

mv hi<span class="token punctuation">.</span>txt src<span class="token operator">/</span>hello<span class="token punctuation">.</span>txt <span class="token comment">//将hi.txt 移动到src目录，并改名为hello.txt</span>

mv test<span class="token operator">/</span> src<span class="token operator">/</span>  <span class="token comment">// 如果src目录不存在，那么将test目录改名为src，如果src目录存在，则是将test目录移动到src目录下</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="tar-打包" tabindex="-1"><a class="header-anchor" href="#tar-打包" aria-hidden="true">#</a> tar 打包</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
tar <span class="token operator">-</span>cvf hello<span class="token punctuation">.</span>tar <span class="token punctuation">.</span><span class="token comment">/*    
// 将当前所有文件打包，打包后的文件命名为hello.tar

tar -zcvf hello.tar.gz ./*  
// 将当前目录下的所有文件打包并压缩，打包后的文件命名为hello.tar.gz


</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解包" tabindex="-1"><a class="header-anchor" href="#解包" aria-hidden="true">#</a> 解包</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>tar <span class="token operator">-</span>xvf hello<span class="token punctuation">.</span>tar     <span class="token comment">// 将hello.tar 文件进行解包，并将解包后的文件放在当前目录</span>
tar <span class="token operator">-</span>zxvf hello<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz  <span class="token comment">// 将hello.tar.gz 文件进行解压，并将解压后的文件放在当前目录</span>
tar <span class="token operator">-</span>zxvf hello<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">-</span><span class="token constant">C</span> <span class="token operator">/</span>usr<span class="token operator">/</span>local <span class="token comment">// 将hello.tar.gz 文件进行解压，并将解压后的文件放在/usr/local目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="vim" tabindex="-1"><a class="header-anchor" href="#vim" aria-hidden="true">#</a> vim</h1><p>vim hello.txt 有hello.txt 则直接打开，没有的话就新建文件</p><p>vim 进行编辑时候分为三种模式：</p><p>命令模式（Command mode） 插入模式（Insert mode） 底行模式（Last line mode）</p><p><strong>命令模式</strong> vim 命令 打开文件后，默认进入命令模式 移动光标 箭头，gg 或G</p><p><strong>插入模式</strong> 插入模式对文本内容进行编辑</p><p>在命令模式下按下[i,a,o] 任意一个进入插入模式</p><p>在插入模式下按 ESC ，回到命令模式</p><p><strong>底行模式</strong> 在命令模式下按下[:,/]任意一个，可以进入底行模式</p><p>通过/方式进入底行模式后，可以对文件内容进行查找 通过: 进入底行模式后，可以输入wq(保存并退出)，q！（不保存退出）、set nu（显示行号）</p><h2 id="find" tabindex="-1"><a class="header-anchor" href="#find" aria-hidden="true">#</a> find</h2><p>语法:</p><p>find dirName -option fileName</p><p>find . -name &quot;*.java&quot; 在当前目录及其子目录下查找.java结尾的文件 find /folderA -name &quot;.java&quot; 在/folderA目录及其子目录下查找.java 结尾的文件</p><h2 id="grep" tabindex="-1"><a class="header-anchor" href="#grep" aria-hidden="true">#</a> grep</h2><p>查找文件中的内容</p><p>grep word fileName</p><p>grep Hello HelloWorld.java 查找HelloWorld.java 中出现Hello字符串的位置</p><p>grep hello *.java 在当前目录所有.java 结尾的文件中包含hello字符串的位置</p><h2 id="查看当前目录" tabindex="-1"><a class="header-anchor" href="#查看当前目录" aria-hidden="true">#</a> 查看当前目录</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>pwd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>cp -r ~/.volta /Library/volta</p>`,61),i=[r];function l(d,p){return n(),s("div",null,i)}const c=a(t,[["render",l],["__file","Linux 常用命令.html.vue"]]);export{c as default};
