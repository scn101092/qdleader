import{_ as c,o as t,c as n,d as e,b as o}from"./app-fr3Buw_y.js";const s={},_=e("h2",{id:"webpack构建流程-原理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#webpack构建流程-原理","aria-hidden":"true"},"#"),o(" webpack构建流程（原理）")],-1),a=e("p",null,"从启动构建到输出结果一系列过程：",-1),l=e("p",null,"（1）初始化参数：解析webpack配置参数，合并shell传入和webpack.config.js文件配置的参数，形成最后的配置结果。",-1),r=e("p",null,"（2）开始编译：上一步得到的参数初始化compiler对象，注册所有配置的插件，插件监听webpack构建生命周期的事件节点，做出相应的反应，执行对象的 run 方法开始执行编译。",-1),d=e("p",null,"（3）确定入口：从配置的entry入口(fs读取文件内容)，开始解析文件构建AST语法树（ @babel/parser 转AST树），找出依赖，递归下去。",-1),p=e("p",null,"（4）编译模块：递归中根据文件类型和loader配置，调用所有配置的loader对文件进行转换，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理。",-1),h=e("p",null,"（5）完成模块编译并输出：递归完事后，得到每个文件结果，包含每个模块以及他们之间的依赖关系，根据entry配置生成代码块chunk。",-1),i=e("p",null,"（6）输出完成：输出所有的chunk到文件系统。",-1),u=[_,a,l,r,d,p,h,i];function b(k,f){return t(),n("div",null,u)}const m=c(s,[["render",b],["__file","webpack的打包原理.html.vue"]]);export{m as default};
