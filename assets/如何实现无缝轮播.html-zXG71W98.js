import{_ as e,o as i,c as t,a as l}from"./app-fr3Buw_y.js";const _={},n=l("<ol><li><p>设置容器overflow:hidden；</p></li><li><p>设置每个轮播图的宽度为容器宽度，并用一个div包裹，这个div宽度是所有轮播图宽度总和；</p></li><li><p>克隆首尾节点，并依次插入对方前面/后面；</p></li><li><p>此时需要移动轮播图至第二个位置，因为第一个位置是我们后补的节点；</p></li><li><p>启动interval timer，每次记录index，每次加1，并移动轮播图，每次移动一个容器宽度（使用css3 translate）；</p></li></ol><p>6， 当到达后补节点后，瞬间移动到真实节点（这一瞬间前要先去掉transition动画），比如上图中，当index等于4（从0数），瞬间移动到1，因为4等于1（0|+1），0等于3（length-1+1）；</p><p>7, 移动后再开启transition动画；</p>",3),o=[n];function s(c,p){return i(),t("div",null,o)}const a=e(_,[["render",s],["__file","如何实现无缝轮播.html.vue"]]);export{a as default};
