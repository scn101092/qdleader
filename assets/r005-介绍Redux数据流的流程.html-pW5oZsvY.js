import{_ as r,o as t,c,d as e}from"./app-fr3Buw_y.js";const s={},o=e("ol",null,[e("li",null,"当用户触摸界面时，调用store.dispatch(action)捕捉具体的action动作。"),e("li",null,"然后Redux的store自动调用reducer函数，store传递两个参数给reducer函数：当前state和收到的action。其中，reducer函数必须是一个纯函数，该函数会返回一个新的state。"),e("li",null,"根reducer会把多个子reducer的返回结果合并成最终的应用状态，在这一过程中，可以使用Redux提供的combineReducers方法。使用combineReducers方法时，action会传递给每个子的reducer进行处理，在子reducer处理后会将结果返回给根reducer合并成最终的应用状态。"),e("li",null,"store调用store.subscribe(listener)监听state的变化，state一旦发生改变就会触发store的更新，最终view会根据store数据的更新刷新界面。")],-1),l=[o];function n(u,_){return t(),c("div",null,l)}const i=r(s,[["render",n],["__file","r005-介绍Redux数据流的流程.html.vue"]]);export{i as default};
