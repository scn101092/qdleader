import{_ as s,o as n,c as a,a as e}from"./app-fr3Buw_y.js";const t={},p=e(`<h1 id="用字符串实现trim" tabindex="-1"><a class="header-anchor" href="#用字符串实现trim" aria-hidden="true">#</a> 用字符串实现trim</h1><h2 id="_1-去除字符串收尾两端的空格" tabindex="-1"><a class="header-anchor" href="#_1-去除字符串收尾两端的空格" aria-hidden="true">#</a> 1.去除字符串收尾两端的空格</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>String.prototype.trim1 = function() {
	return this.replace(/(^\\s*)|(\\s*$)/g,&#39;&#39;)
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="调用" tabindex="-1"><a class="header-anchor" href="#调用" aria-hidden="true">#</a> 调用</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>console.log(&quot; Hello world &quot;.trim1())

// Hello world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-去除字符串所有的空格" tabindex="-1"><a class="header-anchor" href="#_2-去除字符串所有的空格" aria-hidden="true">#</a> 2.去除字符串所有的空格</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>String.prototype.trim2 = function() {
	return this.replace(/\\s*/g,&#39;&#39;)
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="调用-1" tabindex="-1"><a class="header-anchor" href="#调用-1" aria-hidden="true">#</a> 调用</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>console.log(&quot; Hello world &quot;.trim2())


// Helloworld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然 es6 自带的trim在项目里是最常用到的</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//es6
&#39; ab &#39;.trim()      //&quot;ab&quot; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>方法一：使用replace正则匹配的方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">去除所有空格</span><span class="token operator">:</span> str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      

<span class="token literal-property property">去除两头空格</span><span class="token operator">:</span> str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*|\\s*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

去除左空格： str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> “”<span class="token punctuation">)</span><span class="token punctuation">;</span>

去除右空格： str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\s*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>str为要去除空格的字符串，实例如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot; 23 23 &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> str2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2323</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法二：使用str.trim()方法 str.trim()局限性：无法去除中间的空格，实例如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;   xiao  ming   &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> str2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//xiao  ming </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),i=[p];function l(o,c){return n(),a("div",null,i)}const u=s(t,[["render",l],["__file","S012-用正则实现trim.html.vue"]]);export{u as default};
