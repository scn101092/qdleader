import{_ as e,o as a,c as t,a as d}from"./app-fr3Buw_y.js";const h={},r=d('<h1 id="介绍下-set、map、weakset-和-weakmap-的区别" tabindex="-1"><a class="header-anchor" href="#介绍下-set、map、weakset-和-weakmap-的区别" aria-hidden="true">#</a> 介绍下 Set、Map、WeakSet 和 WeakMap 的区别？</h1><h2 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> Set</h2><ol><li>成员不能重复</li><li>只有健值，没有健名，有点类似数组。</li><li>可以遍历，方法有add, delete,has</li></ol><h2 id="weakset" tabindex="-1"><a class="header-anchor" href="#weakset" aria-hidden="true">#</a> weakSet</h2><blockquote><p>成员都是对象 成员都是弱引用，随时可以消失。 可以用来保存DOM节点，不容易造成内存泄漏 不能遍历，方法有add, delete,has</p></blockquote><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><blockquote><p>本质上是健值对的集合，类似集合 可以遍历，方法很多，可以干跟各种数据格式转换</p></blockquote><h2 id="weakmap" tabindex="-1"><a class="header-anchor" href="#weakmap" aria-hidden="true">#</a> weakMap</h2><blockquote><p>直接受对象作为健名（null除外），不接受其他类型的值作为健名 健名所指向的对象，不计入垃圾回收机制 不能遍历，方法同get,set,has,delete</p></blockquote>',9),s=[r];function o(i,_){return a(),t("div",null,s)}const l=e(h,[["render",o],["__file","简单总结介绍下 Set、Map、WeakSet 和 WeakMap 的区别？.html.vue"]]);export{l as default};
