import{_ as e,o,c as r,d as t,b as n}from"./app-fr3Buw_y.js";const s={},_=t("p",null,"js四舍五入并保留两位小数 Math.Round()函数，能够对一个浮点数进行四舍五入，但是返回的结果是个整数，无法精确到小数点后，比如0.123，Math.round()返回0。",-1),a=t("p",null,"Number.toFixed()方法，能保留小数点后面的指定位数，但如果执行 5.1.toFixed(2) 的话，会返回5.10，而不是我们期待的5.1，所以，这个方法也不太可取。",-1),u=t("p",null,"最简单实现的方法是，假设我要对0.409进行四舍五入并保留两位小数，如果直接调用Math.round()的话，结果是0，如果直接调用.toFixed(2)方法的话，会返回0.40，最简单有效的方法就是对0.409先乘以100，再调用Math.round()，然后再除以100，就OK了。 var number = 0.409; alert(Math.round(number * 100) / 100); //输出0.41 如上，如果是三位小数",-1),l=t("p",null,"Math.round(number * 1000) / 1000) 不确定是多少位小数，则写一个方法",-1),d=t("p",null,[n("// num为传入的值，n为保留的小数位 function fomatFloat(num,n){"),t("br"),n(" var f = parseFloat(num); if(isNaN(f)){ return false; }"),t("br"),n(" f = Math.round(num*Math.pow(10, n))/Math.pow(10, n); // n 幂"),t("br"),n(" var s = f.toString(); var rs = s.indexOf('.'); //判定如果是整数，增加小数点再补0 if(rs < 0){ rs = s.length; s += '.'; } while(s.length <= rs + n){ s += '0'; } return s; }"),t("br"),n(" 以上代码将数值和需要保留位数传入fomatFloar函数中，并判定如果不足长度时补0")],-1),c=[_,a,u,l,d];function h(i,f){return o(),r("div",null,c)}const p=e(s,[["render",h],["__file","Y010-四舍五入保留两位有效数字.html.vue"]]);export{p as default};
